# deploy kube scheduler and start services
    - name: copy kube config to remote hosts only
      copy: 
        src: "/home/ubuntu/{{ item }}"
        dest: /var/lib/kubernetes/
        remote_src: yes
      loop: 
        - kube-scheduler.kubeconfig

    - name: Create the kube-scheduler systemd unit file
      shell: |
        cat << EOF | sudo tee /etc/systemd/system/kube-scheduler.service
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/kubernetes/kubernetes

        [Service]
        ExecStart=/usr/local/bin/kube-scheduler \\
          --config=/etc/kubernetes/config/kube-scheduler.yaml \\
          --v=2
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
        EOF

    - name: Generate the kube-scheduler yaml config file.
      shell: |
        cat <<EOF | sudo tee /etc/kubernetes/config/kube-scheduler.yaml
        apiVersion: kubescheduler.config.k8s.io/v1beta3
        kind: KubeSchedulerConfiguration
        clientConnection:
          kubeconfig: "/var/lib/kubernetes/kube-scheduler.kubeconfig"
        leaderElection:
          leaderElect: true
        EOF

    - name: Install, configure, and start API server components
      block:
        - name: Reload the all services
          shell: sudo systemctl daemon-reload

        - name: Enable services, in all cases
          service:
            name: "{{ item }}"
            enabled: yes 
          loop:
            - kube-apiserver
            - kube-controller-manager
            - kube-scheduler

        - name: Restart service kubelet, in all cases
          service:
            name: "{{ item }}"
            state: restarted  
          loop:
            - kube-apiserver
            - kube-controller-manager
            - kube-scheduler

        - name: Start service all services, if not started
          service:
            name: "{{ item }}"
            state: started   
          loop:
            - kube-apiserver
            - kube-controller-manager
            - kube-scheduler
      
    - pause:
        seconds: 30

    - name: Make sure all the services are active (running)
      shell: sudo systemctl status kube-apiserver kube-controller-manager kube-scheduler
      register: services_result
      no_log: True

    - name: Show service results 
      debug:
        msg:
        - "{{ services_result.stdout_lines }}"      

    - name: Use kubectl to check componentstatuses
      shell: kubectl get componentstatuses --kubeconfig admin.kubeconfig
      register: component_result
      no_log: True

    - name: Show componentstatuses results 
      debug:
        msg:
        - "{{ component_result.stdout_lines }}"  